---
name: PR build
on:
  pull_request:
    branches:
      - "master"
      - "[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [arm64-dirty, ubuntu-20.04]
    steps:
      - name: Starting Report
        run: |
          echo Git Ref: ${{ github.ref }}
          echo GitHub Event: ${{ github.event_name }}
          echo Disk usage
          df -h
          echo Memory
          free -m
      - name: Clear repository
        run: |
          sudo rm -fr "$GITHUB_WORKSPACE" && mkdir "$GITHUB_WORKSPACE"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build packages
        env:
          PR_ID: ${{ github.event.pull_request.number  }}
        run: |
          make V=1 PRUNE=1 pkgs
          COMMIT_ID=$(git describe --abbrev=8 --always)
          echo "VERSION=0.0.0-pr$PR_ID-$COMMIT_ID" >> $GITHUB_ENV
          echo "TAG=evebuild/danger:pr$PR_ID" >> $GITHUB_ENV
          echo "ARCH=$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/')" >> "$GITHUB_ENV"
      - name: Post package report
        run: |
          echo Disk usage
          df -h
          echo Memory
          free -m
          docker system df
          docker system df -v
      - name: Build EVE KVM
        run: |
          make V=1 ROOTFS_VERSION="$VERSION" HV=kvm eve  # note that this already loads it into docker
      - name: Post eve build report
        run: |
          echo Disk usage
          df -h
          echo Memory
          free -m
          docker system df
          docker system df -v
      - name: Export docker container
        run: |
          docker tag "lfedge/eve:$VERSION-kvm" "$TAG-kvm-${{ env.ARCH }}"
          docker save "$TAG-kvm-${{ env.ARCH }}" > "eve-kvm-${{ env.ARCH }}.tar"
      - name: Upload EVE KVM
        uses: actions/upload-artifact@v2
        with:
          name: eve-kvm-${{ env.ARCH }}
          path: eve-kvm-${{ env.ARCH }}.tar
      - name: Clean EVE KVM
        run: |
          make clean
          docker rmi "$TAG-kvm-${{ env.ARCH }}" "lfedge/eve:$VERSION-kvm" "lfedge/eve:$VERSION-kvm-${{ env.ARCH }}" ||:
      - name: Post clean eve KVM report
        run: |
          echo Disk usage
          df -h
          echo Memory
          free -m
          docker system df
          docker system df -v
      - name: Build EVE XEN
        run: |
          make V=1 ROOTFS_VERSION="$VERSION" HV=xen eve
      - name: Post eve build report
        run: |
          echo Disk usage
          df -h
          echo Memory
          free -m
          docker system df
          docker system df -v
      - name: Export docker container
        run: |
          docker tag "lfedge/eve:$VERSION-xen" "$TAG-xen-${{ env.ARCH }}"
          docker save "$TAG-xen-${{ env.ARCH }}" > "eve-xen-${{ env.ARCH }}.tar"
      - name: Upload EVE XEN
        uses: actions/upload-artifact@v2
        with:
          name: eve-xen-${{ env.ARCH }}
          path: eve-xen-${{ env.ARCH }}.tar
      - name: Clean
        if: ${{ always() }}
        run: |
          make clean
          docker system prune -f -a --volumes
          rm -rf ~/.linuxkit